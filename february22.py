# -*- coding: utf-8 -*-
"""February22.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1bQVhdkJYOsUq45HiXocq1FfCL7mHWwXb
"""

d = {0:{'fruit':'apple', 'quantity':235},
     1:{'fruit':'orange', 'quantity':190}
     }

for i in range(len(d)):
    print(i, d[i]['fruit'], d[i]['quantity'], )

state = True
while state:
  number = input('Enter a number ==> ')
  if not number.isnumeric():
      sate = True
      print('Invalid number try again')
  else:
    state = False
length = len(number)
result = 0
for i in number:
  result += int(i)**length  
if result == int(number):
    print(f"{number} is an n-Armstrong Number")
else:
    print(f"{number} is not an n-Armstrong Number")

num = '124'
length = len(num)
reverse_num = num[::-1]
if reverse_num == num:
    print('Okey')
else:
    print('No')

print('Pascal Triangle')
number = int(input('Enter a number == > '))
print()
listed = []  
for i in range(num):  
  listed.append([])  
  listed[i].append(1)  
  for j in range(1, i):  
    listed[i].append(listed[i - 1][j - 1] + listed[i - 1][j])  
  if(num != 0):  
    listed[i].append(1) 
listed[0].remove(1)
for i in range(num):
    text = (num-i) * ' ' 
    for j in range(0, i+1):
        text +=  str(listed[i][j]) + '  '
    print(text)

#how to swap two variables each other
a = 5
b = 7
temp = 5
a = b
b = temp
print(f"a = {a}  b = {b}")

x = 12
y = 13
x = x + y
y = x - y
x = x - y
print(f"x = {x}  y = {y}")

i = 90
j = 120
i,j = j,y
print(f"i = {i}  j = {j}")

expres = input('Enter a math expression --> ')
x=3
ex = eval(expres)
print(ex)

import sympy as sym
sym.init_printing()
x,y,z = sym.symbols('x,y,z')
c1 = sym.Symbol('c1')
f = sym.Eq(2*x**2+y+z,1)
g = sym.Eq(x+2*y+z,c1)
h = sym.Eq(-2*x+y,-z)

sym.solve([f,g,h],(x,y,z))

# In this function you can pass how many arguments you want 

def sum_numbers(*numbers):
    sum = 0
    for n in numbers:
        sum += n
    return sum

print(sum_numbers(4, 5, 12))
print(sum_numbers(5, 7, 12, 33, 45))
print(sum_numbers())

# Sometimes when no argument is specified, the function should use the default value
def total(amount, unt="unit"):
    text = f"{amount} {unt} "
    return text

print(total(4))
print(total(5, 'kg'))
print(total(12, 'parcels'))
print(total(12, 'liter'))
print(total(100))

# the function has an optional argument and an argument with default value 
def calculate(*numbers, sign='+'):
    if sign == '*':
        result = 1
    else:
        result = 0
    for n in numbers:
        if sign == '+':
            result += n
        if sign == '*':
            result *= n
    return result

print(calculate(8))
print(calculate(10,5))
print(calculate(10, 5, 30, 50))
print(calculate(3,2, sign = '*'))
print(calculate(3, 2, 5, sign = '*'))
print(calculate())

from sympy import symbols, solve
x = symbols('x')
equation = input('enter a equation such as 3*x**2+4*x-16    => ')
# equation = x**3+4*x-12
expr = equation
sol = solve(equation)
print()
sol

count, fruit, price = (2, 'apple', 3.5)
print (count, fruit, price)